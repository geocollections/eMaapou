version: 2.1

orbs:
  node: circleci/node@4.1.0

parameters:
  package-version:
    type: string
    default: '1.0.5'

executors:
  docker-publisher:
    environment:
      IMAGE_NAME: geocollections/geoloogia
      IMAGE_NAME_DEV: geocollections/geoloogia-dev
    docker:
      - image: circleci/node:lts-stretch

jobs:
  build_docker_image:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:dev .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  publish_dev_image:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load archive Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish `dev` Docker image to Docker Hub
          command: |
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
            docker push $IMAGE_NAME
  publish_production_image:
    executor: docker-publisher
    steps:
      - run:
          name: Publish `production` Docker image to Docker hub
          command: |
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
            docker pull $IMAGE_NAME:dev
            docker tag $IMAGE_NAME:dev $IMAGE_NAME:latest
            docker tag $IMAGE_NAME:dev $IMAGE_NAME:<< pipeline.parameters.package-version >>
            docker rmi $IMAGE_NAME:dev
            docker push $IMAGE_NAME
  run_dev_container:
    executor: docker-publisher
    steps:
      - run:
          name: Run dev container
          command: ssh -o "StrictHostKeyChecking no" -p ${PORT} ${USER}@${ADDRESS} "cd /var/www/geoloogia/script && . run_staging.sh"
  run_production_container:
    executor: docker-publisher
    steps:
      - run:
          name: Run production container
          command: ssh -o "StrictHostKeyChecking no" -p ${PORT} ${USER}@${ADDRESS} "cd /var/www/geoloogia/script && . run_production.sh"
workflows:
  build_test_approve_deploy:
    when:
      equal: [development, << pipeline.git.branch >>]
    jobs:
      - build_docker_image:
      - publish_dev_image:
          requires:
            - build_docker_image
      - run_dev_container:
          requires:
            - publish_docker_image
      - hold:
          type: approval
          requires:
            - run_dev-container
      - publish_production_image:
          requires:
            - hold
      - run_production_container:
          requires:
            - publish_production_image
